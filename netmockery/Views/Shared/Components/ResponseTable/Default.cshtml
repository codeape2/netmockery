@using netmockery
@model IEnumerable<ResponseRegistryItem>
<table class="table">
    <thead>
        <tr>
            <th>Timestamp</th>
            <th>Request</th>
            <th>Endpoint</th>
            <th>Request Matcher</th>
            <th>Response Creator</th>
            <th>Details</th>
            <th>Error</th>
        </tr>
    </thead>
    <tbody>
        @{ 
            var i = 0;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Timestamp.ToString("HH:mm:ss.fff")</td>
                <td>@item.Method @(item.RequestPath)@(item.QueryString)</td>
                <td>
                    @if (item.Endpoint != null)
                    {
                        @Html.ActionLink(item.Endpoint.Name, "EndpointDetails", "Endpoints", new { name = item.Endpoint.Name })
                    }
                </td>
                <td>
                    @if (item.RequestMatcher != null)
                    {
                        @await Component.InvokeAsync("RequestMatcher", new { requestMatcher = item.RequestMatcher })
                    }                    
                </td>
                <td>
                    @if (item.ResponseCreator != null)
                    {
                        @await Component.InvokeAsync("ResponseCreator", new { responseCreator = item.ResponseCreator, endpoint = item.Endpoint })
                    }
                </td>
                <td>
                    @Html.ActionLink("Request", "RequestDetails", new { responseId = item.Id })
                    <br>
                    @Html.ActionLink("Response", "ResponseDetails", new { responseId = item.Id })
                </td>
                <td>
                    @if (item.Error != null)
                    {
                        @item.Error
                    }
                </td>
            </tr>
            i++;
        }
    </tbody>
</table>

